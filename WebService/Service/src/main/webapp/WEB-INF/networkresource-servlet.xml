<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:osgi="http://www.springframework.org/schema/osgi"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd"
	default-autowire="byName">
	
	<bean id="handlerMapping" class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" ></bean>
	
	<bean name="/api/hello.do" class="xm.bibibiradio.mainsystem.webservice.controller.HelloController"></bean>
	<bean name="/api/jsonTest.do" class="xm.bibibiradio.mainsystem.webservice.controller.BibibiradioJsonTestController">
	   <property name="sessions">
	       <ref bean="sessionManager" />
	   </property>
	</bean>
	
	<bean name="/api/jsonTest2.do" class="xm.bibibiradio.mainsystem.webservice.controller.JsonTestController"></bean>
	
	<bean name="/api/getCategories" class="xm.bibibiradio.mainsystem.webservice.controller.BibibiradioGetCategories">
       <property name="sessions">
           <ref bean="sessionManager" />
       </property>
       
       <property name="resourceDAO">
           <ref bean="resourceDAO" />
       </property>
    </bean>
    
    <bean name="/api/getSites" class="xm.bibibiradio.mainsystem.webservice.controller.BibibiradioGetSites">
       <property name="sessions">
           <ref bean="sessionManager" />
       </property>
       
       <property name="resourceDAO">
           <ref bean="resourceDAO" />
       </property>
    </bean>
    
    <bean name="/api/getMostPvResource" class="xm.bibibiradio.mainsystem.webservice.controller.BibibiradioGetMostPvResource">
       <property name="sessions">
           <ref bean="sessionManager" />
       </property>
       
       <property name="resourceDAO">
           <ref bean="resourceDAO" />
       </property>
    </bean>
	
	<bean id="sessionManager" class="xm.bibibiradio.mainsystem.webservice.common.session.LocalSessionManager"></bean>
	
	<bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
	    <property name="order" value="1" />
	</bean>
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="prefix" value="/WEB-INF/jsp/" />
	    <property name="suffix" value=".jsp" />
	</bean>
	
	<bean id="jsonView" class="xm.bibibiradio.mainsystem.webservice.common.views.JsonView"></bean>
	
	<!-- db 访问 bean -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://10.163.102.88:3306/networkresourcesort?characterEncoding=utf8" />
        <property name="username" value="resource_owner" />
        <property name="password" value="123456" />
    </bean>

    <!-- 创建SqlSessionFactory，同时指定数据源-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatisSqlMapConfig.xml"/>
        <!-- <property name="configLocation" value="file:src/main/resources/mybatisSqlMapConfig.xml" />-->
        <!--指定实体类映射文件，可以指定同时指定某一包以及子包下面的所有配置文件，mapperLocations和configLocation有一个即可，当需要为实体类指定别名时，可指定configLocation属性，再在mybatis总配置文件中采用mapper引入实体类映射文件 -->
        <!--<property  name="mapperLocations"  value="sqlmap/*.xml"/>-->
    </bean>


    <bean id="resourceDAO" class="xm.bibibiradio.mainsystem.webservice.dal.ResourceDAOImpl">
        <property name="sqlSessionFactory">
            <ref bean="sqlSessionFactory"/>
        </property>
        <constructor-arg name="accessExpire" value="86400000"/>
        <constructor-arg name="maxNum" value="100000"/>
        <constructor-arg name="threadNum" value="4"/>
    </bean>
</beans>